// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clerkId  String          @unique
  email    String          @unique
  entries  JournalEntry[]
  analysis EntryAnalysis[]

  // added
  name    String?
  account Account?
}

model JournalEntry {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  content String @db.Text

  analysis EntryAnalysis?

  // added
  // status  JOURNAL_ENTRY_STATUS @default(DRAFT)

  @@unique([userId, id])
}

model EntryAnalysis {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entryId String
  entry   JournalEntry @relation(fields: [entryId], references: [id], onDelete: Cascade)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  mood           String
  subject        String
  summary        String  @db.Text
  color          String  @default("white")
  negative       Boolean
  sentimentScore Float   @default(0)

  @@unique([entryId])
  @@index([userId])
}

// added
model Account {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@unique([userId])
}

// enum JOURNAL_ENTRY_STATUS {
//   DRAFT
//   PUBLISHED
//   ARCHIVED
// }
